###################################
### Inmigrantes papu ###
###################################

ARG_initialize_immigration = {
	clear_array = ARG_immigration_countries
	add_to_array = { ARG_immigration_countries = SPR }
	set_variable = { argentine_migration@SPR = 3 }
	add_to_array = { ARG_immigration_countries = ITA }
	set_variable = { argentine_migration@ITA = 2 }
	ARG_calculate_immigration_triggers = yes
	ARG_calculate_immigration_triggers_display = yes
	ARG_reset_immigration_vars = yes
	ARG_reposition_immigration = yes
	ARG_update_migration = yes
}

ARG_calculate_immigration_triggers = {
	set_variable = { migration_limit_ba = 1.15 } # Buenos Aires
	set_variable = { migration_limit_er = 1.15 } # Mesopotamia
	set_variable = { migration_limit_me = 1.15 } # Mendoza
	set_variable = { migration_limit_tu = 1.15 } # Tucuman
	set_variable = { migration_limit_ca = 1.15 } # Chaco Austral
	set_variable = { migration_limit_pa = 1.15 } # Patagonia
	
	multiply_variable = { migration_limit_ba = 278.state_population_k }
	multiply_variable = { migration_limit_er = 510.state_population_k }
	multiply_variable = { migration_limit_me = 511.state_population_k }
	multiply_variable = { migration_limit_tu = 508.state_population_k }
	multiply_variable = { migration_limit_ca = 509.state_population_k }
	multiply_variable = { migration_limit_pa = 512.state_population_k }
}

ARG_calculate_immigration_triggers_display = {
	set_variable = { migration_limit_er_display = migration_limit_er } # Mesopotamia
	set_variable = { migration_limit_me_display = migration_limit_me } # Mendoza
	set_variable = { migration_limit_tu_display = migration_limit_tu } # Tucuman
	set_variable = { migration_limit_ca_display = migration_limit_ca } # Chaco Austral
	set_variable = { migration_limit_pa_display = migration_limit_pa } # Patagonia
	
	multiply_variable = { migration_limit_er_display = 1000 }
	multiply_variable = { migration_limit_me_display = 1000 }
	multiply_variable = { migration_limit_tu_display = 1000 }
	multiply_variable = { migration_limit_ca_display = 1000 }
	multiply_variable = { migration_limit_pa_display = 1000 }
}

ARG_reset_immigration_vars = {
	set_variable = { migration_multiplier_ba = 0.75 } # Buenos Aires
	set_variable = { migration_multiplier_er = 0.14 } # Mesopotamia
	set_variable = { migration_multiplier_me = 0.05 } # Mendoza
	set_variable = { migration_multiplier_tu = 0.03 } # Tucuman
	set_variable = { migration_multiplier_ca = 0.01 } # Chaco Austral
	set_variable = { migration_multiplier_pa = 0.02 } # Patagonia
	custom_effect_tooltip = ARG_reset_immigration_vars_tt
}

ARG_reposition_immigration = {
	get_sorted_scored_countries = {
		scorer = argentine_immigration_scorer
		array = ARG_immigration_countries
	}
	set_variable = { ARG_next_country = ARG_immigration_countries^0 }
	set_temp_variable = { position = 0 }
	set_variable = { ARG_immigration_position = position }
	for_each_scope_loop = {
		array = ARG_immigration_countries
		
		add_to_temp_variable = { position = 1 }
		set_variable = { ARG_next_country = ARG.ARG_immigration_countries^position }
		set_variable = { ARG_immigration_position = position }
	}
}

ARG_update_migration = {
	set_variable = { total_migration = 0 }

	# Agrega paises faltantes
	every_country = {
		limit = {
			NOT = { is_in_array = { ARG.ARG_immigration_countries = THIS } }
			capital_scope = { is_on_continent = europe }
		}

		if = {
			limit = { original_tag = SPR }

			add_to_array = { ARG.ARG_immigration_countries = THIS }
			set_variable = { ARG.argentine_migration@THIS = 3 }
		}
		else_if = {
			limit = { original_tag = SOV }

			add_to_array = { ARG.ARG_immigration_countries = THIS }
			set_variable = { ARG.argentine_migration@THIS = 0.033 }
		}
		else_if = {
			limit = { original_tag = FRA }

			add_to_array = { ARG.ARG_immigration_countries = THIS }
			set_variable = { ARG.argentine_migration@THIS = 0.01 }
		}
		else_if = {
			limit = { original_tag = ENG }

			add_to_array = { ARG.ARG_immigration_countries = THIS }
			set_variable = { ARG.argentine_migration@THIS = 0.033 }
		}
		else_if = {
			limit = { check_variable = { max_manpower_k < 13000 } }
			# Break
		}
		else_if = {
			add_to_array = { ARG.ARG_immigration_countries = THIS }
			set_variable = { ARG.argentine_migration@THIS = 0.1 }
		}
	}

	# Sacar paises muertos
	for_each_loop = {
		array = ARG_immigration_countries

		if = {
			limit = { NOT = { country_exists = v } }
			remove_from_array = { ARG_immigration_countries = v }
		}
	}

	# Calcula Inmigracion
	for_each_scope_loop = {
		array = ARG_immigration_countries
		
		set_variable = { ARG_migration = ARG.argentine_migration@THIS }
		multiply_variable = { ARG_migration = max_manpower_k }
		divide_variable = { ARG_migration = 12 }

		if = {
			limit = { has_civil_war = yes }
			multiply_variable = { ARG_migration = 2 }
		}

		add_to_variable = { ARG.total_migration = ARG_migration }
	}
	
	# Suma a las provincias
	set_variable = { total_migration_ba = migration_multiplier_ba } # Buenos Aires
	set_variable = { total_migration_er = migration_multiplier_er } # Mesopotamia
	set_variable = { total_migration_me = migration_multiplier_me } # Mendoza
	set_variable = { total_migration_tu = migration_multiplier_tu } # Tucuman
	set_variable = { total_migration_ca = migration_multiplier_ca } # Chaco Austral
	set_variable = { total_migration_pa = migration_multiplier_pa } # Patagonia

	multiply_variable = { total_migration_ba = total_migration }
	multiply_variable = { total_migration_er = total_migration }
	multiply_variable = { total_migration_me = total_migration }
	multiply_variable = { total_migration_tu = total_migration }
	multiply_variable = { total_migration_ca = total_migration }
	multiply_variable = { total_migration_pa = total_migration }

	278 = { add_manpower = var:ARG.total_migration_ba }
	510 = { add_manpower = var:ARG.total_migration_er }
	511 = { add_manpower = var:ARG.total_migration_me }
	508 = { add_manpower = var:ARG.total_migration_tu }
	509 = { add_manpower = var:ARG.total_migration_ca }
	512 = { add_manpower = var:ARG.total_migration_pa }

	
	# Aumenta building slots
	if = {
		limit = { check_variable = { 278.state_population_k > migration_limit_ba } }
		278 = { add_extra_state_shared_building_slots = 1 }
		multiply_variable = { migration_limit_ba = 1.15 }
	}
	if = {
		limit = { check_variable = { 510.state_population_k > migration_limit_ba } }
		510 = { add_extra_state_shared_building_slots = 1 }
		multiply_variable = { migration_limit_er = 1.15 }
	}
	if = {
		limit = { check_variable = { 511.state_population_k > migration_limit_ba } }
		511 = { add_extra_state_shared_building_slots = 1 }
		multiply_variable = { migration_limit_me = 1.15 }
	}
	if = {
		limit = { check_variable = { 508.state_population_k > migration_limit_ba } }
		508 = { add_extra_state_shared_building_slots = 1 }
		multiply_variable = { migration_limit_tu = 1.15 }
	}
	if = {
		limit = { check_variable = { 509.state_population_k > migration_limit_ba } }
		509 = { add_extra_state_shared_building_slots = 1 }
		multiply_variable = { migration_limit_ca = 1.15 }
	}
	if = {
		limit = { check_variable = { 512.state_population_k > migration_limit_ba } }
		512 = { add_extra_state_shared_building_slots = 1 }
		multiply_variable = { migration_limit_pa = 1.15 }
	}
	ARG_calculate_immigration_triggers_display = yes
}

###################################
### Aliadofilos vs Germanofilos ###
###################################

ARG_initialize_allied_vs_germany_conflict = {
	set_variable = { ARG_allied_opinion = 60 }
	set_variable = { ARG_german_opinion = 30 }
}

# How to use, use allied_opinion_temp as a parameter
ARG_add_allied_opinion = {
	add_to_variable = { ARG_allied_opinion = allied_opinion_temp }
	if = {
		limit = { check_variable = { allied_opinion_temp < 0 } }
		multiply_temp_variable = { allied_opinion_temp = -1 }
		custom_effect_tooltip = allied_opinion_decrease_tt
	} else = {
		custom_effect_tooltip = allied_opinion_increase_tt
	}
	
	ARG_clamp_avg_opnion = yes
	ARG_update_avg_events = yes
}

ARG_add_german_opinion = {
	add_to_variable = { ARG_german_opinion = german_opinion_temp }
	if = {
		limit = { check_variable = { german_opinion_temp < 0 } }
		multiply_temp_variable = { german_opinion_temp = -1 }
		custom_effect_tooltip = german_opinion_decrease_tt
	} else = {
		custom_effect_tooltip = german_opinion_increase_tt
	}

	ARG_clamp_avg_opnion = yes
	ARG_update_avg_events = yes
}

ARG_clamp_avg_opnion = {
	clamp_variable = { var = ARG_allied_opinion min = 0 max = 100 }
	clamp_variable = { var = ARG_german_opinion min = 0 max = 100 }
}

ARG_update_avg_events = {
	if = {
		limit = { check_variable = { ARG_german_opinion < 15 } }
	}
}
